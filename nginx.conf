log_format json_combined escape=json '{'
    '"time_local": "$time_local",'
    '"remote_addr": "$remote_addr",'
    '"remote_user": "$remote_user",'
    '"request": "$request",'
    '"status": "$status",'
    '"body_bytes_sent": "$body_bytes_sent",'
    '"http_referer": "$http_referer",'
    '"http_user_agent": "$http_user_agent",'
    '"http_x_forwarded_for": "$http_x_forwarded_for",'
    '"request_time": "$request_time"'
'}';


server {
    listen 443 ssl;
    server_name rss.avikant.com;
    access_log /var/log/nginx/access.log json_combined;

    ssl_certificate     /etc/letsencrypt/live/rss.avikant.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/rss.avikant.com/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    location / {
        proxy_pass http://rss_reader:8080;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# HTTP redirect for rss.avikant.com
server {
    listen 80;
    server_name rss.avikant.com;
    return 301 https://$host$request_uri;
    access_log /var/log/nginx/access.log json_combined;
}

server {
    listen 80;
    server_name avikant.com www.avikant.com aws-server.avikant.com;
    access_log /var/log/nginx/access.log json_combined;

    # Blog on /
    location / {
        root /site/blog;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    # Uno frontend on /uno
    location /uno {
        root /site;
        index index.html;
        try_files $uri $uri/ /index.html;

        # Adjust root path for Uno assets
        sub_filter 'href="/' 'href="/uno/';
        sub_filter 'src="/' 'src="/uno/';
        sub_filter_once off;
    }

    # Uno backend on /api
    location /api/ {
        proxy_pass http://uno_server:5000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Secret Pastebin on /
    location /sneak/ {
        root /site/;
        index index.html;
        try_files $uri $uri/ /sneak/index.html;
    }

    # secret-pastebin backend on /paste-api
    location /paste-api/ {
        proxy_pass http://password_backend:8000/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }


    location /rss-reader/ {
        rewrite ^/rss-reader(/.*)$ $1 break;

        proxy_pass http://rss_reader:8080;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # HTML rewriting for SPA that expects `/`
        sub_filter_types text/html;
        sub_filter_once off;
        sub_filter 'href="/' 'href="/rss-reader/';
        sub_filter 'src="/'  'src="/rss-reader/';
        sub_filter 'action="/' 'action="/rss-reader/';
        sub_filter 'content="/' 'content="/rss-reader/';
    }


    # Serve static files for /nix/go and /nix/python
    location ~ ^/nix/(go|python)$ {
        # Map the URI to the appropriate flake.nix file
        alias /site/nix/$1/flake.nix;
        add_header Content-Type text/plain;
    }

    # Optional: index page, e.g., for /nix/
    location /nix/ {
        alias /site/nix/$1/flake.nix;
        autoindex on;
    }


}

server {
    listen 443 ssl;
    server_name avikant.com www.avikant.com aws-server.avikant.com;
    access_log /var/log/nginx/access.log json_combined;

    ssl_certificate /etc/letsencrypt/live/avikant.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/avikant.com/privkey.pem;


    # Blog on /
    location / {
        root /site/blog;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    # Uno frontend on /uno
    location /uno {
        root /site;
        index index.html;
        try_files $uri $uri/ /index.html;

        # Adjust root path for Uno assets
        sub_filter 'href="/' 'href="/uno/';
        sub_filter 'src="/' 'src="/uno/';
        sub_filter_once off;
    }

    # Uno backend on /api
    location /api/ {
        proxy_pass http://uno_server:5000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Secret Pastebin on /
    location /sneak/ {
        root /site/;
        index index.html;
        try_files $uri $uri/ /sneak/index.html;
    }

    # secret-pastebin backend on /paste-api
    location /paste-api/ {
        proxy_pass http://password_backend:8000/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /rss-reader/ {
        rewrite ^/rss-reader(/.*)$ $1 break;

        proxy_pass http://rss_reader:8080;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # HTML rewriting for SPA that expects `/`
        sub_filter_types text/html;
        sub_filter_once off;
        sub_filter 'href="/' 'href="/rss-reader/';
        sub_filter 'src="/'  'src="/rss-reader/';
        sub_filter 'action="/' 'action="/rss-reader/';
        sub_filter 'content="/' 'content="/rss-reader/';
    }

    # Serve static files for /nix/go and /nix/python
    location ~ ^/nix/(go|python)$ {
        # Map the URI to the appropriate flake.nix file
        alias /site/nix/$1/flake.nix;
        add_header Content-Type text/plain;
    }

    # Optional: index page, e.g., for /nix/
    location /nix/ {
        alias /site/nix/$1/flake.nix;
        autoindex on;
    }

}


